<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAEBAAAAEACABoBQAANgAAABgYAAABACAAiAkAAJ4FAAAQEAAAAQAgAGgEAAAmDwAAKAAAABAA
        AAAgAAAAAQAIAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAEAAAAAAABzVCsAsl49AMtvMwDNeT4AtXNaANF7
        QADSfUAAz3hZAMh9WABflWAAZpBpAHSLfgBsr28Adq16AGnKeQCfkXQAv4h0AKadfADeh1YA/ZJMAP+W
        TAD9n1QA/6ZWAP6mWgD+r10A/7NVAP+zWwD/sVwA/7deAP+/XQDkk3QA/7ZgAP+5ZQDnrnIA/8pkADBr
        hgA+f5AAHUutAARBuwAGTrwAFU61AA9RsAAdV78AGVu5AB5YvwBAWo8AQVyRAFZ3hgBEYZUAQ2aXAEto
        mQBPaJkAbHiTAG56lQBPZKAAQHmmAFRypABgfagAYn+tACJbwAABY90AJWTJAC1qygA4c88AA2fhAAB1
        7gAFeOoAF37vAAB1+AARdv8AF37/ACB25gBTgogAfJOIAG6OnQBMlaYAcISrAHyRqQBqjbYAb8uCAHHN
        hwB0zYgAcM2NAHfOjgB2zpYAeM+TAHvQngA1hNIAL5zWADCb1QAiod4AP4nrACCF/wAYpOQAHKblADOt
        5QA6rOYASZHGAE2V3gBrl8MAep/EAHCa2gB0ndwAdqXDAHiixgBxo9YAe6XWAEua5gBQmuIATJH/AGKc
        9AByrOcAZLfmAHyx5wBxp/UAg5iSAIemiQCBvoQArKmFAJzYqgCj1bAA/9aDAP/EkQD3ypsA/dexAP/o
        vwCCqsQAkqvMALC4yACmvtsAgLDjAJG/5wCMtPYAjMj2AJXE8gC1z+QAt9DnAK3N/gCr0fIAr9T1AKDQ
        +wCt1/0At9b+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wAAABEDBwcHBAKBZzwnLQAAbU0JISAZ
        HBwTNz5IQz0oAFiAIhwcGBYVFSlvR0VCQSsABX16Ix4aF3sniv///0QnAAAJfncSEHwfJoVuRl1cPAAA
        ADZwg3JkASVAhY9zP2cAAABqi46LhElWTC0nKiRsAABPgoeNh4g4VFJQD1AKYwAAOjQ6azkvMldVU1F4
        DXUAAAAyLy8vLkt0Sgx5dg4AAAAAADMvLzA2cINyZAsAAAAAAAAAAAAAaouOi4ROAAAAAAAAAAAAZYiH
        jYeIYgAAAAAAAAAAAGlgcYZhX1kAAAAAAAAAAAAAW19eXl9/AAAAAAAAAAAAAABZX1toAAAAwAMAAAAB
        AAAAAAAAgAAAAMAAAADgAAAA4AAAAMAAAADAAAAA4AEAAPADAAD/AwAA/gMAAP4DAAD/AwAA/4cAACgA
        AAAYAAAAMAAAAAEAIAAAAAAAYAkAAAAAAAAAAAAAAAAAAAAAAABmotk5WIzBZGxyioyjVDawvWY05M1z
        N//SfUD/0n1A/9J8QP/Re0D/znk+/8BoNPSoRyLfemRsn1FwpI0ta8uoEVG+zANDuekEQbv+A0O57ANE
        t8ADRLd6A0S3KAAAAABLlt2sXIm9xYJ8jdi7b0zk3ZBR9u6hVP/wo1X/8J9U//CeU//vn1L/7p9R/+KQ
        TfvMcUT0fWt+30ZoqtknZsniHGXS7hBl1/cEZdr+Al3T+AJTyekDSbrQA0W4ewNEt1E6i9rtZY/C+ZiP
        mf/SjWD/8Kli//62Yf/+s1///q5d//6rW//+q1n//qlX//efVP/oilL/dWyK/zplt/85dtf/Jnjm/xR4
        7v8Dd+7/AW3m/wFi2f4DVcj9A0m9vQNEt50zg9L8cp3O/q6srv/nrnL/97Rk//60Xv/+r17//qlb//2j
        WP/9n1T//plO//6UTP/9kkz/YmSR/y5nyf9inPT/MIj7/w97/P8Adfj/AHXx/wBw6f8DZ+H/A0/F7QNE
        uOR1XFuMl3Vx1MGahvr1yZz/+8qD//7Ib//+wWL//rpe//6zWf/+rFT//qRT//6mX//+s3n/W2qj/zht
        zv+UvPr/p8z9/6/T/v+p0fz/qdH6/3ay9P8Qdur/B1PK+ANCuvWXSSA4p1YwlsN6VdbttZH7+c+V/fXS
        if/jv2//4rdp/+CvZP/fp1//8q5o//qydf/2s4f/WGel/DttzPyixPv/uNP9/7zX//+v0f//s9T//4S6
        +f8kge3/DlfL9wNBuvMAAAAApzoBQrNMG5PNclHz7sCa++PTq/+sqYX/qKF//6OZef+fkXT/2baN//C3
        jv/kk3T/V12X9jlnwvaMtPb/YZz8/ziI//8Rdv//Gn///yqG+P8/iev/F1rJ6QNDuN4AAAAApzoBFqY+
        CkykRxyhn4B13ZWhrfyFq8b/iqrC/4uowP+HpsD/k6e5/5mTj/+YaUP/Ump7/Dt0rvxUiNz/a53v/3ms
        +/9/tf7/Y6T6/0qO7P4zdNX+H2DHzRRWwLUAAAAAAAAAAIk0CiZ8ORxycmx6zXWWv/yEuOr/i7vr/468
        6/+MvOv/fqzY/3KOov9oY0n/WYd5/0uQof8+fsH/WI7X/2yb5P97pOf/XpPh/0R/z/4uarP+LXDG1Sxz
        0MAAAAAAAAAAAFVJUSFVSVFmZ4Wpy4Sy3/6r0fL/rNX5/63W+v+v1PX/m8br/3yqx/9Tgoj/a7WP/2m7
        mf9Mlab/Km6y/xJSuf8EQrv/C0uz/xlZov8wa4b/QYrF/0ua5v8AAAAAAAAAAElLXzEzUXyTc5O625a7
        4f6cyPH/oc/4/6LP+f+dyvP/pcnp/4ivzP9GfJz/ZrKT/3HHkP9mupL/WayT/06ikv9HnY//SZ+M/0yY
        gP9Phmz/TZG5/0yW4P8AAAAAAAAAACNWkjsnVpGzaIiz5YelzP+Erdr/jrrn/4y55/9/qdj/iajN/3SW
        u/9BcqH/Za+X/3fOkf90zYz/ccyI/27Lg/9ry37/dc2F/3K9fP9jnWX/To2Q50SGptwAAAAAAAAAADFW
        jkExVo7ERWKV61Vvn/9if63/cpjI/26Uxf9UcqT/SGOX/0Jfk/9DZpf/aKyb/3nPm/92zpb/cs2Q/3DN
        i/9xzYf/jdSe/4zKlv9sr2//Rn9KuTRoOJYAAAAAAAAAAC1PgyQnQ25uPFiIzUhjlv5LZpn/UG6i/09t
        of9GYpb/Ql2R/0pnk/9fgJv/dZyX/36pkv96poz/daKG/32xjf+S0qL/jMqW/3Czduk9jUK/MHk3ZSpu
        MjgAAAAAAAAAACM6Xg4jOl4sMUx3lDtXiNlAXJD6QFuQ/UBakP5AW5H9O1mH80pnifNshpn9d5an/n2d
        q/99nKb/eJmi/3+lqP+QwLb/cqqB7k+TVL4nei5uJncuKSVyLwYAAAAAAAAAAAAAAAAAAAAAJEBlQC1K
        dJBBYJTxQF2S+kBdkv1CX5X7M1l320BgddtqdpH6b5nK/Xat5f+AsOP/fbDl/3ao2/9rl8P/P3Vfzipp
        L30rdDQLK3Q0AwAAAAAAAAAAAAAAAAAAAAAAAAAAJEBlFSdDajBBYJRQQF+TU0BckVRCX5VTRVNsdlRk
        eq5uk778irTe/pnG8P+dyfT/ncjx/5XA6f+Esdr/UXqMyjNiU3YrdDQDK3Q0AQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARUtgTFZujqGIsdv+msPq/qXP9f+o1Pz/p9D3/6PL
        7/+cxOb/W4ew0ztljn4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAD1OVXUZ8sLK30Of/oMjt/5jI9P+g0Pv/mMj1/5/I7v+1z+T/XJvK6TCCvpQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEVeYYCt5s7VfuOX/bbro/37A
        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
        AADgAQAA/gMAAP4DAAD+AwAA/gMAAP8DAAA=
</value>
  </data>
</root>